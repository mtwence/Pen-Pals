[{"C:\\Users\\koocl\\Desktop\\Pen-Pals\\client\\src\\index.js":"1","C:\\Users\\koocl\\Desktop\\Pen-Pals\\client\\src\\App.js":"2","C:\\Users\\koocl\\Desktop\\Pen-Pals\\client\\src\\pages\\BBoard.js":"3","C:\\Users\\koocl\\Desktop\\Pen-Pals\\client\\src\\pages\\Response.js":"4","C:\\Users\\koocl\\Desktop\\Pen-Pals\\client\\src\\pages\\Entry.js":"5","C:\\Users\\koocl\\Desktop\\Pen-Pals\\client\\src\\components\\LoginSignup\\Login.js":"6","C:\\Users\\koocl\\Desktop\\Pen-Pals\\client\\src\\components\\LoginSignup\\Signup.js":"7","C:\\Users\\koocl\\Desktop\\Pen-Pals\\client\\src\\utils\\mutations.js":"8","C:\\Users\\koocl\\Desktop\\Pen-Pals\\client\\src\\utils\\auth.js":"9","C:\\Users\\koocl\\Desktop\\Pen-Pals\\client\\src\\components\\Sidebar\\index.js":"10","C:\\Users\\koocl\\Desktop\\Pen-Pals\\client\\src\\components\\Letter\\index.js":"11","C:\\Users\\koocl\\Desktop\\Pen-Pals\\client\\src\\pages\\BBoard2.js":"12"},{"size":329,"mtime":1662486832831,"results":"13","hashOfConfig":"14"},{"size":1897,"mtime":1662568875987,"results":"15","hashOfConfig":"14"},{"size":218,"mtime":1662516240520,"results":"16","hashOfConfig":"14"},{"size":0,"mtime":1662411280038,"results":"17","hashOfConfig":"14"},{"size":280,"mtime":1662515088135,"results":"18","hashOfConfig":"14"},{"size":2555,"mtime":1662485455376,"results":"19","hashOfConfig":"14"},{"size":4689,"mtime":1662526532246,"results":"20","hashOfConfig":"14"},{"size":1285,"mtime":1662525796210,"results":"21","hashOfConfig":"14"},{"size":1060,"mtime":1662485227755,"results":"22","hashOfConfig":"14"},{"size":1626,"mtime":1662536718005,"results":"23","hashOfConfig":"14"},{"size":1152,"mtime":1662536384152,"results":"24","hashOfConfig":"14"},{"size":940,"mtime":1662536581347,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"12q2foy",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},"C:\\Users\\koocl\\Desktop\\Pen-Pals\\client\\src\\index.js",[],["56","57"],"C:\\Users\\koocl\\Desktop\\Pen-Pals\\client\\src\\App.js",[],"C:\\Users\\koocl\\Desktop\\Pen-Pals\\client\\src\\pages\\BBoard.js",["58","59"],"import React, { useState, useEffect } from \"react\";\r\nimport Letter from \"../components/Letter/index\";\r\n\r\nconst BBoard = () => {\r\n  return (\r\n    <div>\r\n      <Letter />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BBoard;\r\n","C:\\Users\\koocl\\Desktop\\Pen-Pals\\client\\src\\pages\\Response.js",[],["60","61"],"C:\\Users\\koocl\\Desktop\\Pen-Pals\\client\\src\\pages\\Entry.js",[],"C:\\Users\\koocl\\Desktop\\Pen-Pals\\client\\src\\components\\LoginSignup\\Login.js",[],"C:\\Users\\koocl\\Desktop\\Pen-Pals\\client\\src\\components\\LoginSignup\\Signup.js",["62"],"import React, { useState } from \"react\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport Auth from \"../../utils/auth\";\r\nimport { ADD_USER } from \"../../utils/mutations\";\r\n\r\nfunction Signup(props) {\r\n  // set initial form state\r\n  const [userFormData, setUserFormData] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  // set state for form validation\r\n  const [validated] = useState(false);\r\n  // set state for alert\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const [addUser, { error }] = useMutation(ADD_USER);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // check if form has everything (as per react-bootstrap docs)\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    try {\r\n      const response = await addUser({\r\n        variables: { ...userFormData },\r\n      });\r\n      Auth.login(response.login.token);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setShowAlert(true);\r\n    }\r\n\r\n    setUserFormData({\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div class=\"col-4 container h-100\">\r\n      <h2>Signup</h2>\r\n      <Form\r\n        class=\"mx-1 mx-md-4\"\r\n        noValidate\r\n        validated={validated}\r\n        onSubmit={handleFormSubmit}\r\n      >\r\n        {/* show alert if server response is bad */}\r\n        <Alert\r\n          dismissible\r\n          onClose={() => setShowAlert(false)}\r\n          show={showAlert}\r\n          variant=\"danger\"\r\n        >\r\n          Something went wrong with your signup!\r\n        </Alert>\r\n        <div class=\"d-flex flex-row align-items-center mb-4\">\r\n          <i class=\"fa fa-user fa-lg me-3 fa-fw\"></i>\r\n          <Form.Group>\r\n            <div class=\"form-outline flex-fill mb-0\">\r\n              <Form.Control\r\n                placeholder=\"What will be your username?\"\r\n                name=\"username\"\r\n                type=\"username\"\r\n                id=\"username\"\r\n                class=\"form-control\"\r\n                onChange={handleInputChange}\r\n                value={userFormData.username}\r\n                required\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Please enter a name.\r\n              </Form.Control.Feedback>\r\n              <Form.Label htmlFor=\"username\">Username:</Form.Label>\r\n            </div>\r\n          </Form.Group>\r\n        </div>\r\n        <div class=\"d-flex flex-row align-items-center mb-4\">\r\n          <i class=\"fa fa-envelope fa-lg me-3 fa-fw\"></i>\r\n          <div class=\"form-outline flex-fill mb-0\">\r\n            <Form.Control\r\n              placeholder=\"What is your email?\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              id=\"email\"\r\n              class=\"form-control\"\r\n              onChange={handleInputChange}\r\n              value={userFormData.email}\r\n              required\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please enter an email.\r\n            </Form.Control.Feedback>\r\n            <Form.Label htmlFor=\"email\">Email:</Form.Label>\r\n          </div>\r\n        </div>\r\n        <div class=\"d-flex flex-row align-items-center mb-4\">\r\n          <i class=\"fa fa-lock fa-lg me-3 fa-fw\"></i>\r\n          <div class=\"form-outline flex-fill mb-0\">\r\n            <Form.Control\r\n              placeholder=\"What password will you set?\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              class=\"form-control\"\r\n              onChange={handleInputChange}\r\n              value={userFormData.password}\r\n              required\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Please enter a password.\r\n            </Form.Control.Feedback>\r\n            <Form.Label htmlFor=\"password\">Password:</Form.Label>\r\n          </div>\r\n        </div>\r\n        <div class=\"d-flex justify-content-center mx-4 mb-3 mb-lg-4\">\r\n          <Button\r\n            disabled={\r\n              !(\r\n                userFormData.username &&\r\n                userFormData.email &&\r\n                userFormData.password\r\n              )\r\n            }\r\n            type=\"submit\"\r\n            variant=\"success\"\r\n            class=\"btn btn-primary btn-lg\"\r\n          >\r\n            Register\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","C:\\Users\\koocl\\Desktop\\Pen-Pals\\client\\src\\utils\\mutations.js",[],"C:\\Users\\koocl\\Desktop\\Pen-Pals\\client\\src\\utils\\auth.js",[],"C:\\Users\\koocl\\Desktop\\Pen-Pals\\client\\src\\components\\Sidebar\\index.js",["63"],"import React from \"react\";\r\nimport Logo from \"../../assets/logo.png\";\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <div class=\"col-auto col-md-3 col-xl-2 px-sm-2 px-0 bg-light\">\r\n      <div class=\"d-flex flex-column align-items-center align-items-sm-start px-3 pt-2 text-white min-vh-100\">\r\n        <ul\r\n          class=\"nav nav-pills flex-column mb-sm-auto mb-0 align-items-center align-items-sm-start\"\r\n          id=\"menu\"\r\n        >\r\n          <a class=\"navbar-brand\" href=\"/loginsignup\">\r\n            <img src={Logo} height=\"125\" alt=\"h2h\" loading=\"lazy\" />\r\n          </a>\r\n          <li>\r\n            <ul\r\n              class=\"collapse show nav flex-column ms-1\"\r\n              id=\"submenu1\"\r\n              data-bs-parent=\"#menu\"\r\n            >\r\n              <li class=\"w-100\">\r\n                <a href=\"/\" class=\"nav-link px-0\">\r\n                  <i class=\"fa fa-pencil fa-fw me-3\"></i>\r\n                  <span class=\"d-none d-sm-inline\">Write</span>\r\n                </a>\r\n              </li>\r\n              <li class=\"w-100\">\r\n                <a href=\"*\" class=\"nav-link px-0\">\r\n                  <i class=\"fa fa-board fa-fw me-3\"></i>\r\n                  <span class=\"d-none d-sm-inline\">Board</span>\r\n                </a>\r\n              </li>\r\n              <li class=\"w-100\">\r\n                <a href=\"#\" class=\"nav-link px-0\">\r\n                  <i class=\"fa fa-heart fa-fw me-3\"></i>\r\n                  <span class=\"d-none d-sm-inline\">Responses</span>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\koocl\\Desktop\\Pen-Pals\\client\\src\\components\\Letter\\index.js",[],"C:\\Users\\koocl\\Desktop\\Pen-Pals\\client\\src\\pages\\BBoard2.js",["64","65"],"import React, { useState, useEffect } from \"react\";\r\nimport Card from \"../assets/letter_card.png\";\r\n\r\nconst BBoard = () => {\r\n  return (\r\n    <div>\r\n      <div class=\"row\">\r\n        <div class=\"row\">\r\n          <img\r\n            class=\"col card-img-top\"\r\n            className=\"envelope\"\r\n            src={Card}\r\n            alt=\"Card img\"\r\n          />\r\n          <img\r\n            class=\"col card-img-top\"\r\n            className=\"envelope\"\r\n            src={Card}\r\n            alt=\"Card img\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <img\r\n            class=\"col card-img-top\"\r\n            className=\"envelope\"\r\n            src={Card}\r\n            alt=\"Card img\"\r\n          />\r\n          <img\r\n            class=\"col card-img-top\"\r\n            className=\"envelope\"\r\n            src={Card}\r\n            alt=\"Card img\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BBoard;\r\n",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":25},{"ruleId":"70","severity":1,"message":"74","line":1,"column":27,"nodeType":"72","messageId":"73","endLine":1,"endColumn":36},{"ruleId":"66","replacedBy":"75"},{"ruleId":"68","replacedBy":"76"},{"ruleId":"70","severity":1,"message":"77","line":19,"column":21,"nodeType":"72","messageId":"73","endLine":19,"endColumn":26},{"ruleId":"78","severity":1,"message":"79","line":34,"column":17,"nodeType":"80","endLine":34,"endColumn":51},{"ruleId":"70","severity":1,"message":"71","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":25},{"ruleId":"70","severity":1,"message":"74","line":1,"column":27,"nodeType":"72","messageId":"73","endLine":1,"endColumn":36},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.",["81"],["82"],"'error' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]